<?php
/**
 * @file
 * simple_google_places.module
 */

define('SIMPLE_GOOGLE_PLACE_END_POINT', 'https://maps.googleapis.com/maps/api/place/details/json');

/**
 * Implements hook_permission().
 */
function simple_google_places_permission() {
  return [
    'administer simple_google_places settings' => [
      'title' => t('Administer @module', ['@module' => 'Simple Google Places']),
    ],
    'access simple_google_places data' => [
      'title' => t('Access to json data'),
    ],
  ];
}
/**
 * Implements hook_menu().
 */
function simple_google_places_menu() {
  return [
    'admin/config/services/simple_google_places' => [
      'title' => 'Simple Google Places settings',
      'description' => 'Configure simple google places',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('simple_google_places_menu_settings'),
      'access arguments' => array('administer simple_google_places settings'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'inc/admin.settings.inc',
    ],
    'simple_google_places/%' => [
      'title' => 'Simple Google Places',
      'page callback' => 'simple_google_places_page_callback',
      'page arguments' => [1],
      'access callback' => 'simple_google_places_access_callback',
      'access arguments' => [1, 'access simple_google_places data'],
      'type' => MENU_CALLBACK,
    ],
  ];
}
/**
 * Access callback : simple_google_places/%.
 */
function simple_google_places_access_callback($place_id, $permission) {
  if (variable_get('simple_google_places_limit', FALSE)) {
    $allowed_ids = explode("\r\n", variable_get('simple_google_places_allowed_placeids'));
    if (!in_array($place_id, $allowed_ids)) {
      return FALSE;
    }
  }
  return TRUE;
}
/**
 * Page callback : simple_google_places/%.
 */
function simple_google_places_page_callback($place_id) {
  drupal_json_output(SimpleGooglePlaces::getData($place_id));
}
/**
 * Implementations of hook_theme().
 *
 * Usage :
 * - theme('simple_google_places_schemaorg', ['place_id' => 'ChIJt5-D9gmZ8kcRGWLP4tZZP0I'])
 * Or with render API :
 * $build['schemaorg'] = [
 *   '#theme' => 'simple_google_places_schemaorg',
 *   '#place_id' => 'ChIJt5-D9gmZ8kcRGWLP4tZZP0I',
 * ];
 *
 */
function simple_google_places_theme($existing, $type, $theme, $path) {
  return array(
    'simple_google_places_schemaorg' => array(
      'variables' => array(
        'place_id' => NULL,
      ),
      'template' => 'templates/simple_google_places_schemaorg',
    ),
    'simple_google_places_is_open' => array(
      'variables' => array(
        'place_id' => NULL,
        'div_id' => NULL,
        'place_type' => 'Store',
      ),
      'template' => 'templates/simple_google_places_is_open',
    ),
  );
}
/**
 * Implements hook_preprocess_hook().
 */
function simple_google_places_preprocess_simple_google_places_schemaorg(&$vars) {
  $vars['jsonld'] = SimpleGooglePlaces::getData($vars['place_id']);
}
/**
 * Implements hook_preprocess_hook().
 */
function simple_google_places_preprocess_simple_google_places_is_open(&$vars) {
  if (($library = libraries_load('simple_google_places')) && !empty($library['loaded'])) {
    $params = new stdClass();
    $params->endpoint = url('simple_google_places/' . $vars['place_id']);
    $params->place_type = t($vars['place_type']);
    if (!isset($vars['div_id']) || is_null($vars['div_id'])) {
      $vars['div_id'] = 'simple-google-places-' . md5($vars['place_id']);
    }
    $js = "jQuery(document).ready(function(){jQuery('#%s').simpleGooglePlaces(%s);});";
    $js = sprintf($js, $vars['div_id'], json_encode($params));
    drupal_add_js($js, 'inline');
  }
}
/**
 * Implements hook_libraries_info().
 */
function simple_google_places_libraries_info() {
  $libraries['simple_google_places'] = array(
    'name' => 'Simple Google Places',
    'vendor url' => 'https://github.com/kabanon/js_simple_google_places',
    'download url' => 'https://github.com/kabanon/js_simple_google_places',
    'version arguments' => array(
      'file' => 'simple_google_places.js',
      'pattern' => '/Simple Google Places (\d+)/',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array('simple_google_places.js'),
    ),
  );
  return $libraries;
}